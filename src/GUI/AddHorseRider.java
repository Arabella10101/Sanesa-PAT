/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DATA.DBConnection;
import DATA.DataValidation;
import DATA.HorseRiderDetails;
import DATA.RiderDetails;
import DATA.UseHorseRiderDetails;
import DATA.UseRiderDetails;
import static GUI.NormalMainFrame.ID;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.ButtonType;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Arabella
 */
public class AddHorseRider extends javax.swing.JFrame {

    //contructors
    DataValidation objDataValid = new DataValidation();
    DATA.UseHorseRiderDetails objUHR;
    HorseRiderDetails objHRD;

    /**
     * Creates new form AddHorseRider
     */
    public AddHorseRider() {
        initComponents();
        setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblHRID = new javax.swing.JLabel();
        lblRiderID = new javax.swing.JLabel();
        lblHorseName = new javax.swing.JLabel();
        lblAccountID = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        txtHRID = new javax.swing.JTextField();
        txtRiderID = new javax.swing.JTextField();
        txtHorseName = new javax.swing.JTextField();
        txtAccountID = new javax.swing.JTextField();
        lblHRIDErrorMessage = new javax.swing.JLabel();
        lblAccountIDErrorMessage = new javax.swing.JLabel();
        lblRiderIDErrorMessage = new javax.swing.JLabel();
        lblHorseNameErrorMessage = new javax.swing.JLabel();
        btnAddHorseRider = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblHRID.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        lblHRID.setText("HRID");

        lblRiderID.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        lblRiderID.setText("RiderID");

        lblHorseName.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        lblHorseName.setText("Horse Name");

        lblAccountID.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        lblAccountID.setText("Account ID");

        lblTitle.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        lblTitle.setText("Enter Horse and Rider's Details");

        txtHRID.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N

        txtRiderID.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N

        txtHorseName.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N

        txtAccountID.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N

        lblHRIDErrorMessage.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        lblHRIDErrorMessage.setForeground(new java.awt.Color(255, 0, 0));

        lblAccountIDErrorMessage.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        lblAccountIDErrorMessage.setForeground(new java.awt.Color(255, 0, 0));

        lblRiderIDErrorMessage.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        lblRiderIDErrorMessage.setForeground(new java.awt.Color(255, 0, 0));

        lblHorseNameErrorMessage.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        lblHorseNameErrorMessage.setForeground(new java.awt.Color(255, 0, 0));

        btnAddHorseRider.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        btnAddHorseRider.setText("Add ");
        btnAddHorseRider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHorseRiderActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAddHorseRider, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(117, 117, 117)
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblTitle))
                        .addGap(0, 188, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAccountID)
                            .addComponent(lblHorseName)
                            .addComponent(lblRiderID)
                            .addComponent(lblHRID))
                        .addGap(55, 55, 55)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRiderIDErrorMessage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAccountIDErrorMessage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblHRIDErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHRID, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRiderID, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHorseName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAccountID, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(lblHorseNameErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTitle)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHRID)
                    .addComponent(txtHRID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(lblHRIDErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRiderID)
                    .addComponent(txtRiderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(lblRiderIDErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHorseName)
                    .addComponent(txtHorseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(lblHorseNameErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAccountID)
                    .addComponent(txtAccountID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(lblAccountIDErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddHorseRider, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddHorseRiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHorseRiderActionPerformed
        /*
            calls methods to determines if data entered into text fields is valid 
            and then the method either adds data to database or results in an error message
         */

        int totalValidCounter = 0; // counter to keep track of how many field's data is valid   
        objHRD = new HorseRiderDetails(); //constructor
        try {
            objUHR = new UseHorseRiderDetails(); //constructor
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddHorseRider.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddHorseRider.class.getName()).log(Level.SEVERE, null, ex);
        }

        //gets data from text fields
        String HRID = txtHRID.getText();
        String RiderID = txtRiderID.getText();
        String HorseName = txtHorseName.getText();
        String accountID = txtAccountID.getText();

        objHRD = new HorseRiderDetails(HRID, RiderID, HorseName, accountID); //creates new HorseRider object

        if (objDataValid.numberValidation(HRID, "HRID", lblHRIDErrorMessage) > 1) // validates HRID
        {
            totalValidCounter++; // increases valid counter
            lblHRIDErrorMessage.setText(""); //sets error message to blank if HRID is valid
        }

        if (objDataValid.numberValidation(RiderID, "RiderID", lblRiderIDErrorMessage) > 1) // validates RiderID
        {
            totalValidCounter++; // increases valid counter
            lblRiderIDErrorMessage.setText(""); //sets error message to blank if RiderID is valid
        }
        if (objDataValid.testPresence(RiderID, "RiderID", lblRiderIDErrorMessage) == true) {
            try {
                if (objDataValid.testInRiderDatabase(RiderID, "RiderID", lblRiderIDErrorMessage, " must be a valid ID") == true) //validates if account ID exists in the database
                {
                    totalValidCounter++; // increases valid counter
                    lblRiderIDErrorMessage.setText(""); //sets error message to blank if account id is valid
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AddHorseRider.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(AddHorseRider.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (objDataValid.textValidation(HorseName, "HorseName", lblHorseNameErrorMessage) > 1) //validates HorseName
        {
            totalValidCounter++; // increases valid counter
            lblHorseNameErrorMessage.setText(""); //sets error message to blank if HorseName is valid
        }
        try {
            if (ID.contentEquals(accountID) || objDataValid.checkAdmin(ID) == true) {
                if (objDataValid.numberValidation(accountID, "Account ID", lblAccountIDErrorMessage) > 1) //validates account ID
                {
                    totalValidCounter++; // increases valid counter
                    lblAccountIDErrorMessage.setText(""); //sets error message to blank if account id is valid
                }
                if (objDataValid.testPresence(accountID, "Account ID", lblAccountIDErrorMessage) == true) {
                    try {
                        if (objDataValid.testInAccountDatabase(accountID, "Account ID", lblAccountIDErrorMessage, " must be a valid ID") == true) //validates if account ID exists in the database
                        {
                            totalValidCounter++; // increases valid counter
                            lblAccountIDErrorMessage.setText(""); //sets error message to blank if account id is valid
                        }
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(AddHorseRider.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(AddHorseRider.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } else {
                JOptionPane.showConfirmDialog(null, "You may not add a rider with this ID", null, JOptionPane.DEFAULT_OPTION); //error message
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddHorseRider.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddHorseRider.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (totalValidCounter > 5) // if all fields are logged as valid horse rider combination will be added
        {
            try {
                objUHR.addHorseRider(objHRD); // calls the addRider method
                JOptionPane.showConfirmDialog(null, "Combination added", null, JOptionPane.DEFAULT_OPTION);
            } catch (SQLException ex) {
                Logger.getLogger(AddHorseRider.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showConfirmDialog(null, "Adding Combination not successful", null, JOptionPane.DEFAULT_OPTION);
            }
        }
    }//GEN-LAST:event_btnAddHorseRiderActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        //returns to NormalMainFrame
        this.dispose();
        try {
            new NormalMainFrame().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(AddHorseRider.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddHorseRider.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBackActionPerformed

    public void store(String id) throws SQLException {
        ID = id;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddHorseRider.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddHorseRider.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddHorseRider.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddHorseRider.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddHorseRider().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddHorseRider;
    private javax.swing.JButton btnBack;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAccountID;
    private javax.swing.JLabel lblAccountIDErrorMessage;
    private javax.swing.JLabel lblHRID;
    private javax.swing.JLabel lblHRIDErrorMessage;
    private javax.swing.JLabel lblHorseName;
    private javax.swing.JLabel lblHorseNameErrorMessage;
    private javax.swing.JLabel lblRiderID;
    private javax.swing.JLabel lblRiderIDErrorMessage;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtAccountID;
    private javax.swing.JTextField txtHRID;
    private javax.swing.JTextField txtHorseName;
    private javax.swing.JTextField txtRiderID;
    // End of variables declaration//GEN-END:variables
}
